knitr::opts_chunk$set(echo = TRUE, message=FALSE)
library(tidyverse)
library(kableExtra)
library(pairwiseCI)
library(ggplot2)
library(GGally)
options(scipen = 99, digits = 2)
MwattsDatevsCostModel <- lm(Cost~Date + Mwatts, data=nuclearPowerStations)
nuclearPowerStations <- read_csv("NuclearPlants.csv")
MwattsDatevsCostModel
MwattsDatevsCostModel <- lm(Cost~Date + Mwatts, data=nuclearPowerStations)
MwattsDatevsCostModel
MwattsDatevsCostModel <- 55
MwattsDatevsCostModel
library(tidyverse)
library(kableExtra)
library(pairwiseCI)
library(ggplot2)
library(GGally)
nuclearPowerStations <- read_csv("NuclearPlants.csv")
MwattsDatevsCostModel <- lm(Cost~Date + Mwatts, data=nuclearPowerStations)
MwattsDatevsCostModel
LSLineDate <- lm(Cost~Date,data=nuclearPowerStations)
LSLineDate
LSLineMwatts <- lm(Cost~Mwatts,data=nuclearPowerStations)
LSLineMwatts
MwattsDatevsCostModel <- lm(Cost~Date + Mwatts, data=nuclearPowerStations)
MwattsDatevsCostModel
LSLineMwatts <- lm(Cost~Mwatts,data=nuclearPowerStations)
library(tidyverse)
library(kableExtra)
library(pairwiseCI)
library(ggplot2)
library(GGally)
nuclearPowerStations <- read_csv("NuclearPlants.csv")
ggplot(nuclearPowerStations, aes(x = Mwatts, y = Cost)) + geom_point() +
geom_smooth(method=lm,se=FALSE) + # add LS line
labs(title="Mwatts vs Cost", x="")
LSLineMwatts <- lm(Cost~Mwatts,data=nuclearPowerStations)
# residual plots Mwatts vs date since 1900
LSLineMwatts
ggplot(NULL,aes(x=predict(LSLineMwatts),y=resid(LSLineMwatts))) + geom_point() +
geom_hline(yintercept=0) + labs(title="Residual plot Mwatts vs Cost")
ggplot(nuclearPowerStations, aes(x = Mwatts, y = Cost)) + geom_point() +
geom_smooth(method=lm,se=FALSE) + # add LS line
labs(title="Mwatts vs Cost", x="")
LSLineMwatts <- lm(Cost~Mwatts,data=nuclearPowerStations)
# residual plots Mwatts vs date since 1900
ggplot(NULL,aes(x=predict(LSLineMwatts),y=resid(LSLineMwatts))) + geom_point() +
geom_hline(yintercept=0) + labs(title="Residual plot Mwatts vs Cost")
Residuals histogram cost vs date since 1900
LSLineDate <- lm(Cost~Date,data=nuclearPowerStations)
residual plots cost vs date since 1900
RegressionModelMwattsDate <- lm(Cost~Mwatts + Date,data=nuclearPowerStations)
RegressionModelMwattsDate
summary(LSLineMwatts)
summary(LSLineMwatts)$Coefficients
summary(LSLineMwatts)[0]
summary(LSLineMwatts)[0]$Coefficients
summary(LSLineMwatts)$Mwatts
s1 <- summary(LSLineMwatts)
string(s1)
str(s1)
s1$coefficients[1]
summary(LSLineMwatts)$coefficients
summary(LSLineMwatts)$coefficients[4]
summary(LSLineMwatts)$coefficients[6]
summary(LSLineMwatts)$coefficients[8]
RegressionModelMwattsDate
summary(RegressionModelMwattsDate)$coefficients[8]
summary(RegressionModelMwattsDate)$coefficients
summary(RegressionModelMwattsDate)$coefficients[10]
summary(RegressionModelMwattsDate)$coefficients[12]
summary(RegressionModelMwattsDate)$coefficients[11]
t.test(RegressionModelMwattsDate)
:
PredictMwats1000 <- data.frame(Mwatts =c(1000))
PredictMwats1000
MWattsCostPrediction <- predict(LSLineMwatts,newdata=PredictMwats1000,interval="prediction")
MWattsCostPrediction
str(MWattsCostPrediction)
str(MWattsCostPrediction)[1,1]
str(MWattsCostPrediction)
MWattsCostPrediction[1,1]
str(MWattsCostPrediction)
sigma(MWattsCostPrediction)
sigma(LSLineMwatts)
summary(LSLineMwatts)$r.squared * 100
knitr::opts_chunk$set(echo = TRUE, message=FALSE)
library(tidyverse)
library(kableExtra)
library(pairwiseCI)
library(ggplot2)
library(GGally)
options(scipen = 99, digits = 3)
SLRRsqred <- summary(LSLineMwatts)$r.squared * 100
SLRRsqred
ggplot(nuclearPowerStations,aes(x=Date,y=resid(LSLineMwatts))) + geom_point() +
geom_hline(yintercept=0) + labs(title="Residual plot Mwatts vs Cost")
ggplot(nuclearPowerStations,aes(x=predict(Date),y=resid(LSLineMwatts))) + geom_point() +
geom_hline(yintercept=0) + labs(title="Residual plot Mwatts vs Cost")
ggplot(nuclearPowerStations,aes(x=Date,y=resid(LSLineMwatts))) + geom_point() +
geom_hline(yintercept=0) + labs(title="Residual VS Date")
str(RegressionModelMwattsDate)
summary(RegressionModelMwattsDate)
str(summary(RegressionModelMwattsDate))
summary(RegressionModelMwattsDate)$coefficients[2]
summary(RegressionModelMwattsDate)$coefficients[3]
LSLineMwatts <- lm(Cost~Date,data=nuclearPowerStations)
LSLineMwatts
LSLineDate <- lm(Cost~Date,data=nuclearPowerStations)
LoggingDate <- read_csv("NuclearPlants.csv")
LoggingDate
LoggingDate <- read_csv("Logging.csv")
LoggingDate
LoggingDate
LoggingDate <- mutate(LoggingDate,group=as_factor(group))
LoggingDate
LoggingDate <- mutate(LoggingDate, group = fct_relevel(group,"Never_Logged","Logged_1_Year_Ago","Logged_8_Years_Ago")))
LoggingDate
LoggingDate <- mutate(LoggingDate, group = fct_relevel(group,"Never_Logged","Logged_1_Year_Ago","Logged_8_Years_Ago"))
LoggingDate
LoggingDate <- mutate(LoggingDate, group = fct_relevel(group,"NeverLogged","Logged1YearAgo","Logged8YearsAgo"))
LoggingData <- read_csv("Logging.csv")
# make group a factor
LoggingData <- mutate(LoggingData,group=as_factor(group))
LoggingData <- mutate(LoggingDate, group = fct_relevel(group,"NeverLogged","Logged1YearAgo","Logged8YearsAgo"))
LoggingData
# make group a factor
LoggingData <- mutate(LoggingData,group = as_factor(group))
LoggingData <- mutate(LoggingData, group = fct_relevel(group,"NeverLogged","Logged1YearAgo","Logged8YearsAgo"))
LoggingData <- mutate(LoggingData, group = fct_relevel(group,"NP","N/N85","N/R50"))
LoggingData <- mutate(LoggingData, group = fct_relevel(group,"NeverLogged","Logged1YearAgo","Logged8YearsAgo"))
LoggingData <- mutate(LoggingData, group = as_factor(group))
LoggingData
LoggingData <- mutate(LoggingData, group = fct_relevel(group,"Never","1YearAgo","8YearsAgo"))
warning()
warnings()
summary(LoggingData)
View(LoggingData)
LoggingData <- mutate(LoggingData,group=fct_recode(group,1='On',2='Off', 3='fdfd'))
LoggingData <- mutate(LoggingData,group=fct_recode(group,"1" ='On'))
LoggingData <- mutate(LoggingData,group=fct_recode(group, On = '1'))
LoggingData
LoggingData <- mutate(LoggingData,group=fct_recode(group, NeverLogged = '1', Logged1YearAgo = '2', Logged8YearsAgo = '3'))
LoggingData <- mutate(LoggingData,group=fct_recode(group, NeverLogged = '1', Logged1YearAgo = '2', Logged8YearsAgo = '3'
LoggingData
LoggingData <- mutate(LoggingData,group=fct_recode(group, NeverLogged = '1', LoggedYearAgo = '2'))
LoggingData <- mutate(LoggingData,group=fct_recode(group, NeverLogged = '1'))
LoggingData
LoggingData <- mutate(LoggingData,group=fct_recode(group, NeverLogged = '1'))
LoggingData <- mutate(LoggingData,group=fct_recode(group,On = "1"))
LoggingData <- mutate(LoggingData,group=fct_recode(group,"1" ='On'))
LoggingData
LoggingData <- mutate(LoggingData,group=fct_recode(group,"1" ='On'))
LoggingData <- mutate(LoggingData,group=fct_recode(group, 1 ='On'))
LoggingData <- mutate(LoggingData,group=fct_recode(group, On='1'))
LoggingData
LoggingData <- mutate(LoggingData,group=fct_recode(group, NeverLogged='1'))
LoggingData <- mutate(LoggingData,group=fct_recode(group, "NeverLogged"='1'))
LoggingData
LoggingData <- mutate(LoggingData,group=fct_recode(group, "NeverLogged"='1'))
LoggingData <- mutate(LoggingData,group=fct_recode(group, "On"='1'))
LoggingData
LoggingData <- mutate(LoggingData, group = as_factor(group))
LoggingData <- mutate(LoggingData, group = as_factor(group))
LoggingData <- mutate(LoggingData, group = as_factor(group))
LoggingData
LoggingData
LoggingData
knitr::opts_chunk$set(echo = TRUE, message=FALSE)
library(tidyverse)
library(kableExtra)
library(pairwiseCI)
library(ggplot2)
library(doBy)
library(GGally)
options(scipen = 99, digits = 3)
LoggingData
LoggingData
LoggingData <- mutate(LoggingData,group=fct_recode(group, NeverLogged='1', Logged1YearAgo = '2', Logged8YearsAgo = '3'))
LoggingData
View(LoggingData)
View(LoggingDate)
LoggingData <- mutate(LoggingData,group=fct_recode(group, NeverLogged='1', Logged1YearAgo = '2', Logged8YearsAgo = '3'))
LoggingData <- mutate(LoggingData,group=fct_recode(group, NeverLogged='1', Logged1YearAgo = '2', Logged8YearsAgo = '3'))
LoggingData
library(tidyverse)
library(kableExtra)
library(pairwiseCI)
library(ggplot2)
library(doBy)
library(GGally)
LoggingData <- read_csv("Logging.csv")
LoggingData
LoggingData <- mutate(LoggingData, group = as_factor(group))
LoggingData
LoggingData <- mutate(LoggingData,group=fct_recode(group, NeverLogged='1', Logged1YearAgo = '2', Logged8YearsAgo = '3'))
LoggingData
neverLogged <- (LoggingData, group = "NeverLogged")
neverLogged <- (LoggingData, group == "NeverLogged")
neverLogged
neverLogged <- filter(LoggingData, group == "NeverLogged")
neverLogged
LoggingData
logged8YearsAgo <-filter(LoggingData, group =="Logged8YearsAgo")
logged8YearsAgo
logged8YearsAgo
ggplot(neverLogged,aes(x=trees)) + geom_histogram(color='white',binwidth=10) +
labs(title="Histogram of residuals for Mwatts vs Cost", x="")
ggplot(neverLogged,aes(x=trees)) + geom_histogram(color='white',binwidth=5) +
labs(title="Histogram of residuals for Mwatts vs Cost", x="")
LoggingData
ggplot(neverLogged,aes(x=trees)) + geom_histogram(color='white',binwidth=4) +
labs(title="Number of Trees in Never Logged Plot", x="", y="Number of Trees")
ggplot(neverLogged,aes(x=trees)) + geom_histogram(color='white',binwidth=4) +
labs(title="Number of Trees in Never Logged Plot", x="", y="Number of Trees")
ggplot(logged8YearsAgo,aes(x=species)) + geom_histogram(color='white',binwidth=4) +
labs(title="Number of Species in Never Logged Plot", x="", y="Number of Trees")
ggplot(logged8YearsAgo,aes(x=trees)) + geom_histogram(color='white',binwidth=4) +
labs(title="Number of Trees in Never Logged Plot", x="" y="Number of Species")
ggplot(neverLogged,aes(x=trees)) + geom_histogram(color='white',binwidth=1) +
labs(title="Number of Trees in Never Logged Plot", x="", y="Number of Trees")
# sample distribtuion: number of trees in plot Never logged
ggplot(neverLogged,aes(x=trees)) + geom_histogram(color='white',binwidth=2) +
labs(title="Number of Trees in Never Logged Plot", x="", y="Number of Trees")
ggplot(neverLogged,aes(x=trees)) + geom_histogram(color='white',binwidth=1.5) +
labs(title="Number of Trees in Never Logged Plot", x="", y="Number of Trees")
anovaSpecies <- aov((trees + species) ~ group, data = LoggingData)
anovaSpecies
summary(anovaSpecies)
anovaSpecies <- aov((species) ~ group, data = LoggingData)
summary(anovaSpecies)
aov?
?aov
?aov()
anovaSpeciesTrees <- aov((trees + species) ~ group, data = LoggingData)
anovaSpeciesTrees
anovaSpeciesTrees <- aov((trees + species) ~ group, data = LoggingData)
anovaSpecies <- aov((species) ~ group, data = LoggingData)
anovaTrees <- aov((trees) ~ group, data = LoggingData)
anovaTrees
anovaSpecies
anovaSpeciesTrees
anovaSpeciesTrees <- aov(formula = (trees + species) ~ group, data = LoggingData)
anovaSpeciesTrees
str(anovaSpeciesTrees)
summanovaSpeciesTrees <-summary(anovaSpeciesTrees)
summanovaSpeciesTrees
anovaSpeciesTrees <- aov(formula = (trees + species) ~ group, data = LoggingData)
summanovaSpeciesTrees <-summary(anovaSpeciesTrees)
anovaSpecies <- aov((species) ~ group, data = LoggingData)
summanovaSpecies <-aov(species ~ group, data = LoggingData)
anovaTrees <- aov((trees) ~ group, data = LoggingData)
summanovaTrees <-aov(trees ~ group, data = LoggingData)
anovaSpeciesTrees <- aov(formula = (trees + species) ~ group, data = LoggingData)
summanovaSpeciesTrees <-summary(anovaSpeciesTrees)
anovaSpecies <- aov((species) ~ group, data = LoggingData)
summanovaSpecies <-aov(species ~ group, data = LoggingData)
anovaTrees <- aov((trees) ~ group, data = LoggingData)
summanovaTrees <-aov(trees ~ group, data = LoggingData)
# anova model for trees + species on group
anovaSpeciesTrees <- aov(formula = (trees + species) ~ group, data = LoggingData)
summanovaSpeciesTrees <-summary(anovaSpeciesTrees)
# anova model for species on group
anovaSpecies <- aov((species) ~ group, data = LoggingData)
summanovaSpecies <-aov(species ~ group, data = LoggingData)
# anova model for trees on group
anovaTrees <- aov((trees) ~ group, data = LoggingData)
summanovaTrees <-aov(trees ~ group, data = LoggingData)
# pooled residual plot
ggplot(NULL,aes(x=predict(anovaSpeciesTrees),y=resid(anovaSpeciesTrees))) + geom_jitter(width=0.02,height=0.04) +
geom_hline(yintercept=0) + labs(title="Pooled Residual plot")
# pooled normal probability plot
ggplot(NULL,aes(sample=resid(anovaSpeciesTrees))) + geom_qq() + geom_qq_line() +
labs(title="Pooled Normal Probability Plot of Residuals")
str(summanovaSpeciesTrees)
summanovaSpecies.frame <-aov(species ~ group, data = LoggingData)
summanovaSpecies.frame
str(summanovaSpecies)
summanovaSpecies <-aov(species ~ group, data = LoggingData)
summanovaSpecies
summanovaSpeciesTrees <-summary(anovaSpeciesTrees)
str(summanovaSpeciesTrees)
summanovaSpeciesTrees$Pr
summanovaSpeciesTrees$[1]
summanovaSpeciesTrees$Pr[1]
summanovaSpeciesTrees.frame <-summary(anovaSpeciesTrees)
str(summanovaSpeciesTrees.frame)
summanovaSpeciesTrees.frame[2]
summanovaSpeciesTrees.frame$Pr(>F)
Pr(>F)
summanovaSpeciesTrees.frame$Pr
summanovaSpeciesTrees.frame$Pr[1]
summanovaSpeciesTrees.frame$Pr[2]
summanovaSpeciesTrees.frame$Pr[0]
str(anovaSpeciesTrees)
View(summanovaSpeciesTrees)
summanovaSpeciesTrees[1]
summanovaSpeciesTrees[1][1]
summanovaSpeciesTrees[1]$Pr
summanovaSpeciesTrees[1]$p
summanovaSpeciesTrees[1]$P
?summary()
View(summanovaSpeciesTrees)
summary(anovaSpeciesTrees)
str(summary(anovaSpeciesTrees))
summary(anovaSpeciesTrees)$"Pr(>F)"[1]
summary(anovaSpeciesTrees)$"Pr(>F)"[2]
summary(anovaSpeciesTrees)$"Pr(>F)"
View(summanovaSpeciesTrees)
summanovaSpecies[[1]]
summanovaSpeciesTrees[[1]][["Pr(>F)"]]d
summanovaSpeciesTrees[[1]][["Pr(>F)"]]
summanovaSpeciesTrees[[1]][["Pr(>F)"]][1]
pairWiseConfInterval <-TukeyHSD(summanovaSpeciesTrees)
pairWiseConfInterval <-TukeyHSD(anovaSpeciesTrees)
pairWiseConfInterval
kableExtra(pairWiseConfInterval)
kable(pairWiseConfInterval)
pairWiseConfInterval <-TukeyHSD(anovaSpeciesTrees)
kable(pairWiseConfInterval, format = "html", table.attr="style='width:20%'", caption = "<center><stron>Pairwise differences Confidence Interval</strong></center>") %>%
kable_styling(bootstrap_options = "striped",
full_width = F)
pairWiseConfInterval.frame <-TukeyHSD(anovaSpeciesTrees)
kable(pairWiseConfInterval.frame, format = "html", table.attr="style='width:20%'", caption = "<center><stron>Pairwise differences Confidence Interval</strong></center>") %>%
kable_styling(bootstrap_options = "striped",
full_width = F)
pairWiseConfInterval.tibble <-TukeyHSD(anovaSpeciesTrees)
pairWiseConfInterval.tibble
kable(pairWiseConfInterval.tibble, format = "html", table.attr="style='width:20%'", caption = "<center><stron>Pairwise differences Confidence Interval</strong></center>") %>%
kable_styling(bootstrap_options = "striped",
full_width = F)
library(doBy)
tab1 <-summaryBy(pairWiseConfInterval)
pairWiseConfInterval
tab1 <-summaryBy(group~diff, data = pairWiseConfInterval)
View(pairWiseConfInterval.frame)
tab1 <-summaryBy(pairWiseConfInterval.frame[["group"]]))
pairWiseConfInterval <-TukeyHSD(anovaSpeciesTrees)
tab1 <-summaryBy(pairWiseConfInterval.frame[["group"]])
kable(pairWiseConfInterval.frame[["group"]])
kable(pairWiseConfInterval.frame[["group"]])
pairWiseConfInterval <-TukeyHSD(anovaSpeciesTrees)
kable(pairWiseConfInterval.frame[["group"]])
kable(pairWiseConfInterval.frame[["group"]])
pairWiseConfInterval.frame <-TukeyHSD(anovaSpeciesTrees)
pairWiseConfInterval.frame
ggplot(LoggingData,aes(x=group,y=resid(anovaSpeciesTrees))) + geom_boxplot()
KWNumSpecTreesOnGroup <- kruskal.test(group~species + trees,data=LoggingData)
KWNumSpecTreesOnGroup <- kruskal.test(group~(species + trees),data=LoggingData)
KWNumSpecTreesOnGroup <- kruskal.test(group~(species + trees),data=LoggingData)
KWNumSpecTreesOnGroup <- kruskal.test(group~(species + trees),data=LoggingData)
KWNumSpecTreesOnGroup <- kruskal.test(group~(species),data=LoggingData)
KWNumSpecTreesOnGroup
KWNumSpecTreesOnGroup <- kruskal.test((species + trees)~(species),data=LoggingData)
KWNumSpecTreesOnGroup
View(KWNumSpecTreesOnGroup)
View(anovaTrees)
View(KWNumSpecTreesOnGroup)
oneway_test((species + trees)~(species),data=LoggingData)
permutationOneWay <-oneway_test(species + trees~species,data=LoggingData)
KWNumSpecTreesOnGroup <- kruskal.test((species + trees)~(group),data=LoggingData)
KWNumSpecTreesOnGroup
permutationOneWay <-oneway_test(species + trees~group,data=LoggingData)
permutationOneWay <-oneway_test((species + trees)~(group),data=LoggingData))
permutationOneWay <-oneway_test((species + trees)~(group),data=LoggingData)
permutationOneWay <-oneway_test((species)~(group),data=LoggingData)
permutationOneWay
permutationOneWay <-oneway_test((trees + species)~(group),data=LoggingData)
KWNumSpecTreesOnGroup[["p.value"]]
permutationOneWay
?oneway_test()
permutationOneWay <-oneway.test((trees + species)~(group),data=LoggingData)
permutationOneWay
permutationOneWay <-oneway_test((trees + species)~(group),data=LoggingData, distribution=approximate(nresample=100000))
library(coin)
install.packages("coin")
library(tidyverse)
library(kableExtra)
library(pairwiseCI)
library(ggplot2)
library(doBy)
library(GGally)
library(coin)
permutationOneWay <-oneway_test((trees + species)~(group),data=LoggingData, distribution=approximate(nresample=100000))
library(coin)
permutationOneWay <-oneway_test((trees + species)~(group),data=LoggingData, distribution=approximate(nresample=100000))
permutationOneWay <-oneway_test((trees + species)~(group),data=LoggingData)
species
trees
species
LoggingData
species
species
LoggingData
trees
species
setwd("~/UMT/STATS452/HW 3")
LoggingData
trees
species
KWNumSpecTreesOnGroup <- kruskal.test((species + trees)~(group),data=LoggingData)
KWNumSpecTreesOnGroup <- kruskal.test((species + trees)~(group),data=LoggingData)
KWNumSpecTreesOnGroup <- kruskal.test((species + trees)~(group),data=LoggingData)
permutationOneWay <-oneway_test((trees + species)~(group),data=LoggingData)
trees
species
LoggingData
LoggingData.species
permutationOneWay <-oneway_test((species + trees)~(group),data=LoggingData)
permutationOneWay <-oneway_test((species + trees)~(group),data=LoggingData)
LoggingData.trees
permutationOneWay <-oneway_test(species + trees~group,data=LoggingData)
permutationOneWay <-oneway.test(species + trees~group,data=LoggingData)
permutationOneWay <-oneway.test(species + trees~group,data=LoggingData)
permutationOneWay <-oneway.test(species + trees~group,data=LoggingData)
permutationOneWay
KWNumSpecTreesOnGroup <- kruskal.test((species + trees)~(group),data=LoggingData)
KWNumSpecTreesOnGroup <- kruskal.test((species + trees)~(group),data=LoggingData)
KWNumSpecTreesOnGroup <- kruskal.test((species + trees)~(group),data=LoggingData)
KWNumSpecTreesOnGroup
knitr::opts_chunk$set(echo = TRUE, message=FALSE)
library(tidyverse)
library(kableExtra)
library(pairwiseCI)
library(ggplot2)
library(doBy)
library(GGally)
library(coin)
options(scipen = 99, digits = 4)
permutationOneWay <-oneway.test(species + trees~group,data=LoggingData)
permutationOneWay
View(permutationOneWay)
summanovaSpeciesTrees[[1]][["Pr(>F)"]][1]
?pf()
1-pf(17.26,2,6)
1-pf(17.26,2,6)
1-pf(5.17,3,6)
ErrorDf <- 1
1-pf(13.21,1,ErrorDf)
1-pf(6.69,1,ErrorDf)
ErrorDf <- 2
1-pf(14.02,1,ErrorDf)
1-pf(6.12,2,ErrorDf)
ErrorDf <- 2
1-pf(14.05,1,ErrorDf)
1-pf(6.12,2,ErrorDf)
